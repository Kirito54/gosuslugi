@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthProvider
@inject IAuthService AuthService

<AuthorizeView>
    <Authorized>
        <MudAppBar Elevation="0" Class="appbar">
            <div class="container d-flex align-items-center justify-content-between">
                <a href="/" class="d-flex align-items-center text-decoration-none me-4">
                    <span class="h3 mb-0 me-2">üèõÔ∏è</span>
                    <span class="fw-semibold h5 mb-0">–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏</span>
                </a>
                <!-- TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ MudBlazor –º–µ–Ω—é -->
                <MudMenu Icon="@Icons.Material.Filled.AccountCircle">
                    <MudMenuItem OnClick="@(() => Nav.NavigateTo("/profile"))">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</MudMenuItem>
                    <MudMenuItem OnClick="Logout">–í—ã—Ö–æ–¥</MudMenuItem>
                </MudMenu>
            </div>
        </MudAppBar>
    </Authorized>
    <NotAuthorized>
        <MudAppBar Elevation="0" Color="Color.Primary" Class="appbar">
            <div class="container d-flex justify-content-end align-items-center">
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@(() => Nav.NavigateTo("/login"))">–í–æ–π—Ç–∏</MudButton>
            </div>
        </MudAppBar>
    </NotAuthorized>
</AuthorizeView>

@code {
    protected override Task OnInitializedAsync() => Task.CompletedTask;

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Nav.NavigateTo("/login", true);
    }
}
