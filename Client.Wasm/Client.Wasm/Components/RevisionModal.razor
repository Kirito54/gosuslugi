@using Client.Wasm.DTOs

<MudDialog @bind-Visible="open" MaxWidth="MaxWidth.Small">
    <DialogContent>
        <EditForm Model="model" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <MudSelect @bind-Value="model.Type" Label="Причина" Class="w-100">
                @foreach (var r in reasons)
                {
                    <MudSelectItem Value="@r">@r</MudSelectItem>
                }
            </MudSelect>
            <MudTextField @bind-Value="model.DocumentNumber" Label="Номер документа" Class="w-100" />
            <MudTextField @bind-Value="model.SedLink" Label="Ссылка на СЭД" Class="w-100" />
            <div class="mt-3 text-right">
                <MudButton Type="Submit" Color="Color.Primary" Class="me-2">Отправить</MudButton>
                <MudButton Variant="Variant.Text" OnClick="Hide">Отмена</MudButton>
            </div>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    private bool open;
    private CreateApplicationRevisionDto model = new();
    private string[] reasons = new[] { "Жалоба", "Протест прокуратуры", "Решение суда" };

    public async Task Show(int applicationId)
    {
        model = new CreateApplicationRevisionDto { ApplicationId = applicationId };
        open = true;
    }

    [Parameter] public EventCallback<CreateApplicationRevisionDto> OnSubmit { get; set; }

    private async Task HandleSubmit()
    {
        if (OnSubmit.HasDelegate)
            await OnSubmit.InvokeAsync(model);
        open = false;
    }

    void Hide() => open = false;
}
