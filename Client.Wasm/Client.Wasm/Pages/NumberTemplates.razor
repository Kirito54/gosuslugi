@attribute [Authorize(Roles="Администратор,Канцелярия,Начальник управления")]
@page "/number-templates"
@using Client.Wasm.DTOs
@inject INumberTemplateApiClient ApiClient

<div class="p-4">
    <MudCard Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h6" Class="mb-2">Шаблоны номеров</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Class="mb-3" OnClick="(() => edit.Show())">Добавить</MudButton>
            <MudTable Items="@items" Hover="true" Dense="true">
                <HeaderContent>
                    <MudTh>Название</MudTh>
                    <MudTh>Тип</MudTh>
                    <MudTh>Шаблон</MudTh>
                    <MudTh Class="text-center"></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Название">@context.Name</MudTd>
                    <MudTd DataLabel="Тип">@context.TargetType</MudTd>
                    <MudTd DataLabel="Шаблон">@context.TemplateText</MudTd>
                    <MudTd Class="text-center">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="@( (MouseEventArgs args) => edit.Load(context.Id) )" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudCardContent>
    </MudCard>
    <NumberTemplateEdit @ref="edit" OnSaved="Load" />
</div>

@code {
    List<NumberTemplateDto> items = new();
    NumberTemplateEdit? edit;
    protected override async Task OnInitializedAsync() => await Load();
    async Task Load() => items = await ApiClient.GetAllAsync();
}
