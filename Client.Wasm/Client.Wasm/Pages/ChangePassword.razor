@attribute [Authorize]
@page "/profile/change-password"
@inject IUserApiClient ApiClient
@using Client.Wasm.DTOs
@inject IJSRuntime Js
@inject NavigationManager NavigationManager

<div class="container p-4">
    <MudCard Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h6">Смена пароля</MudText>
        </MudCardHeader>
        <MudCardContent>
            <EditForm Model="model">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <MudText Color="Color.Error" Class="mb-2">@errorMessage</MudText>
                }
                <MudTextField @bind-Value="model.OldPassword" Label="Старый пароль" InputType="InputType.Password" Class="mb-3 w-100" />
                <MudTextField @bind-Value="model.NewPassword" Label="Новый пароль" InputType="InputType.Password" Class="mb-3 w-100" />
                <MudButton Type="Button" Color="Color.Primary" OnClick="Save">Сохранить</MudButton>
            </EditForm>
        </MudCardContent>
    </MudCard>
</div>

@code {
    ChangePasswordDto model = new();
    string? errorMessage;
    async Task Save()
    {
        errorMessage = null;
        if (!Client.Wasm.Helpers.ManualValidator.TryValidate(model, out var errors))
        {
            errorMessage = string.Join("\n", errors);
            return;
        }
        await ApiClient.ChangePasswordAsync("me", model);
        NavigationManager.NavigateTo("/");
    }
}
