@page "/login"
@inject Client.Wasm.Services.AuthService AuthService
@inject NavigationManager NavigationManager

<div class="login-page">
  <SfCard CssClass="login-card">
    <img src="images/logo.png" alt="Логотип" class="login-logo" />
    <div class="login-title">ГУ ДИЗО</div>
    <EditForm Model="@model" OnValidSubmit="HandleLogin">
      <DataAnnotationsValidator />
      <div class="mb-3">
        <SfTextBox @bind-Value="model.Email"
                  Placeholder="Эл. почта"
                  CssClass="w-100"
                  FloatLabelType="FloatLabelType.Auto" />
        <ValidationMessage For="@(() => model.Email)" />
      </div>
      <div class="mb-3">
        <SfTextBox @bind-Value="model.Password"
                  Placeholder="Пароль"
                  InputType="InputType.Password"
                  CssClass="w-100"
                  FloatLabelType="FloatLabelType.Auto" />
        <ValidationMessage For="@(() => model.Password)" />
      </div>
      <SfButton Type="Submit" CssClass="e-primary w-100 mb-2">Войти</SfButton>
      <div class="text-center">
        <a href="/forgot-password">Забыли пароль?</a>
      </div>
    </EditForm>
    <div class="login-footer">
      © 2025 ГУ ДИЗО
    </div>
  </SfCard>
</div>

@code {
  class LoginModel
  {
    [Required(ErrorMessage = "Поле обязательно")]
    [EmailAddress(ErrorMessage = "Неверный формат эл. почты")]
    public string Email { get; set; }

    [Required(ErrorMessage = "Поле обязательно")]
    [MinLength(6, ErrorMessage = "Минимум 6 символов")]
    public string Password { get; set; }
  }

  LoginModel model = new();

  async Task HandleLogin()
  {
    var dto = new Client.Wasm.DTOs.LoginRequestDto
    {
        Email = model.Email,
        Password = model.Password
    };
    var success = await AuthService.LoginAsync(dto);
    if (success)
      NavigationManager.NavigateTo("/");
  }
}
