@page "/login"
@inject Client.Wasm.Services.AuthService AuthService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider

<div class="login-wrapper">
    <MudCard Class="login-card">
        <MudCardHeader>
            <div class="text-center mb-3">
                <img src="data:image/png;base64,$logo_b64" class="login-logo" alt="Логотип" />
                <h4 class="login-title">Вход</h4>
            </div>
        </MudCardHeader>

        <MudCardContent>
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <MudTextField @bind-Value="loginModel.Email" Placeholder="Эл. почта" Class="mb-3 w-100" />
                <MudTextField @bind-Value="loginModel.Password" Placeholder="Пароль" InputType="InputType.Password" Class="mb-3 w-100" />

                <MudButton Type="Submit" Color="Color.Primary" Variant="Variant.Filled" Class="login-button" FullWidth="true">
                    Войти
                </MudButton>
            </EditForm>
        </MudCardContent>

        <MudCardActions>
            <div class="text-center mt-3 w-100">
                <a href="#" class="forgot-link">Забыли пароль?</a>
            </div>
        </MudCardActions>
    </MudCard>
</div>

@code {
    LoginModel loginModel = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        if (state.User.Identity?.IsAuthenticated == true)
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        var dto = new Client.Wasm.DTOs.LoginRequestDto
        {
            Email = loginModel.Email,
            Password = loginModel.Password
        };
        var success = await AuthService.LoginAsync(dto);
        if (success)
            Navigation.NavigateTo("/");
    }

    class LoginModel
    {
        [Required]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
    }
}
