@page "/login"
@inject Client.Wasm.Services.AuthService AuthService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider

<div class="login-wrapper">
    <div class="login-card shadow">
        <img src="images/logo.png" alt="Логотип" class="login-logo" />
        <h4 class="login-title">ГУ ДИЗО</h4>

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <SfTextBox Placeholder="Эл. почта" CssClass="mb-3 w-100" @bind-Value="loginModel.Email" />
            <SfTextBox Placeholder="Пароль" CssClass="mb-3 w-100" Type="InputType.Password" @bind-Value="loginModel.Password" />

            <SfButton CssClass="e-primary w-100 mb-2" Type="Submit">Войти</SfButton>
        </EditForm>

        <div class="text-center">
            <a href="#" class="text-light">Забыли пароль?</a>
            <div class="text-light mt-2">© 2025 ГУ ДИЗО</div>
        </div>
    </div>
</div>

@code {
    LoginModel loginModel = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        if (state.User.Identity?.IsAuthenticated == true)
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        var dto = new Client.Wasm.DTOs.LoginRequestDto
        {
            Email = loginModel.Email,
            Password = loginModel.Password
        };
        var success = await AuthService.LoginAsync(dto);
        if (success)
            Navigation.NavigateTo("/");
    }

    class LoginModel
    {
        [Required]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
    }
}
