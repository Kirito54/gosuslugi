@attribute [Authorize]
@page "/workflows"
@inject IWorkflowApiClient ApiClient
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Navigations
@using Client.Wasm.DTOs
@inject IJSRuntime Js
@inject NavigationManager NavigationManager

<div class="container p-4">
    <h1>Маршруты</h1>
    <SfButton CssClass="e-primary mb-3" IconCss="e-icons e-add" OnClick="@( (MouseEventArgs e) => edit.Show() )">Новый маршрут</SfButton>
    <SfGrid TItem="WorkflowDto" DataSource="@items" AllowPaging="true" Width="100%" CssClass="e-bootstrap5">
        <GridPageSettings PageSize="10" />
        <GridColumns>
            <GridColumn Field=@nameof(WorkflowDto.Id) HeaderText="ID" Width="70" TextAlign="TextAlign.Center" IsPrimaryKey="true" />
            <GridColumn Field=@nameof(WorkflowDto.Name) HeaderText="Название" Width="*"/>
            <GridColumn Field=@nameof(WorkflowDto.Description) HeaderText="Описание" Width="2*"/>
            <GridColumn HeaderText="Действия" TextAlign="TextAlign.Center" Width="150">
                <Template>
                    <SfButton CssClass="e-flat" IconCss="e-icons e-edit" OnClick="@( (MouseEventArgs e) => edit.Load((context as WorkflowDto).Id) )" />
                    <SfButton CssClass="e-flat e-danger" IconCss="e-icons e-delete" OnClick="@( (MouseEventArgs e) => Delete((context as WorkflowDto).Id) )" />
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
    <WorkflowEdit @ref="edit" OnSaved="LoadData"/>
</div>

@code {
    List<WorkflowDto> items;
    WorkflowEdit edit;

    protected override async Task OnInitializedAsync() => await LoadData();
    async Task LoadData() => items = await ApiClient.GetAllWorkflowsAsync();
    async Task Delete(int id){ if(await Js.InvokeAsync<bool>("confirm",$"Удалить маршрут {id}?")){ await ApiClient.DeleteAsync(id); await LoadData(); }}
}
