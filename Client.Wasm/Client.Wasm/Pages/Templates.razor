@attribute [Authorize]
@page "/templates"
@inject ITemplateApiClient ApiClient
@using Client.Wasm.DTOs
@inject IJSRuntime Js
@inject NavigationManager NavigationManager

<div class="container p-4">
    <MudCard Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h5">Шаблоны</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Class="mb-3" OnClick="@(() => edit.Show(new CreateTemplateDto()))">Новый шаблон</MudButton>
            <MudTable Items="@items" Hover="true">
                <HeaderContent>
                    <MudTh>ID</MudTh>
                    <MudTh>Название</MudTh>
                    <MudTh>Тип</MudTh>
                    <MudTh class="text-center">Действия</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="ID" Align="Center">@context.Id</MudTd>
                    <MudTd DataLabel="Название">@context.Name</MudTd>
                    <MudTd DataLabel="Тип">@context.Type</MudTd>
                    <MudTd DataLabel="Действия" Align="Center">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="@(() => edit.Load(context.Id))" />
                        <MudIconButton Icon="@Icons.Material.Filled.Download" OnClick="@(() => generator.Show(context.Id))" />
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(() => Delete(context.Id))" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudCardContent>
    </MudCard>
    <TemplateEdit @ref="edit" OnSaved="LoadData" />
    <TemplateGenerate @ref="generator" />
</div>

@code {
    List<TemplateDto> items = new();
    TemplateEdit edit;
    TemplateGenerate generator;

    protected override async Task OnInitializedAsync() => await LoadData();
    async Task LoadData() => items = await ApiClient.GetAllAsync();
    async Task Delete(int id){ if(await Js.InvokeAsync<bool>("confirm", $"Удалить шаблон {id}?")){ await ApiClient.DeleteAsync(id); await LoadData(); } }
}
