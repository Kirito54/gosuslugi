@page "/users"
@inject IUserApiClient ApiClient
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Navigations
@using Client.Wasm.DTOs
@inject IJSRuntime Js
@inject NavigationManager NavigationManager

<div class="container p-4">
    <h1>Пользователи</h1>
    <SfButton CssClass="e-primary mb-3" IconCss="e-icons e-add" OnClick="@( (MouseEventArgs e) => edit.Show(new CreateUserDto()) )">Добавить пользователя</SfButton>
    <SfGrid TItem="UserDto" DataSource="@items" AllowPaging="true" Width="100%">
        <GridColumns>
            <GridColumn Field=@nameof(UserDto.Id) HeaderText="ID" Width="120" />
            <GridColumn Field=@nameof(UserDto.Email) HeaderText="Email" Width="200" />
            <GridColumn Field=@nameof(UserDto.FullName) HeaderText="ФИО" Width="200" />
            <GridColumn HeaderText="Роли" Width="200">
                <Template>
                    @string.Join(", ", (context as UserDto).Roles)
                </Template>
            </GridColumn>
            <GridColumn HeaderText="Действия" TextAlign="TextAlign.Center" Width="150">
                <Template>
                    <SfButton CssClass="e-flat" IconCss="e-icons e-edit" OnClick="@( (MouseEventArgs e) => edit.Load((context as UserDto).Id) )" />
                    <SfButton CssClass="e-flat e-danger" IconCss="e-icons e-delete" OnClick="@( (MouseEventArgs e) => Delete((context as UserDto).Id) )" />
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
    <UserEdit @ref="edit" OnSaved="LoadData" />
</div>

@code {
    List<UserDto> items = new();
    UserEdit edit;

    protected override async Task OnInitializedAsync() => await LoadData();
    async Task LoadData() => items = await ApiClient.GetAllAsync();
    async Task Delete(string id){ if(await Js.InvokeAsync<bool>("confirm", $"Удалить пользователя {id}?")){ await ApiClient.DeleteAsync(id); await LoadData(); } }
}
