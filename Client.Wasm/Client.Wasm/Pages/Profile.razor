@attribute [Authorize]
@page "/profile"

@using Client.Wasm.DTOs
@inject IJSRuntime Js
@inject NavigationManager NavigationManager
<div class="container p-4">
    <SfCard CssClass="mb-4">
        <CardHeader>
            <h1>Профиль</h1>
        </CardHeader>
        <CardContent>
            <EditForm Model="model" OnValidSubmit="OnSave">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <SfTextBox TValue="string" @bind-Value="model.FullName" Placeholder="ФИО" CssClass="mb-3 w-100" />
                <SfTextBox TValue="string" @bind-Value="model.Email" Placeholder="Email" CssClass="mb-3 w-100" />
                <SfButton Type="Submit" CssClass="e-primary">Сохранить</SfButton>
            </EditForm>
        </CardContent>
    </SfCard>
</div>

<SfToast @ref="toast" Timeout="3000"></SfToast>

@code {
    ProfileModel model = new();
    SfToast? toast;

    async Task OnSave()
    {
        // TODO: реализовать логику сохранения профиля
        if (toast != null)
        {
            await toast.ShowAsync(new ToastModel { Content = "Профиль сохранён" });
        }
    }

    class ProfileModel
    {
        [Required]
        public string FullName { get; set; } = string.Empty;
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;
    }
}
