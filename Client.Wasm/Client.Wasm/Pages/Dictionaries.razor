@attribute [Authorize(Roles="Администратор,Системный аналитик")]
@page "/dictionaries"
@inject IDictionaryApiClient ApiClient
@using Client.Wasm.DTOs

<div class="container p-4">
    <MudCard Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h5">Справочники</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudButton Color="Color.Primary" Class="mb-3" OnClick="OpenUpload">Загрузить</MudButton>
            <MudTable Items="@items" Hover="true">
                <HeaderContent>
                    <MudTh>Название</MudTh>
                    <MudTh>Описание</MudTh>
                    <MudTh Align="Right">Записей</MudTh>
                    <MudTh>Обновлён</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Название">@context.Name</MudTd>
                    <MudTd DataLabel="Описание">@context.Description</MudTd>
                    <MudTd DataLabel="Записей" Align="Right">@context.RecordCount</MudTd>
                    <MudTd DataLabel="Обновлён">@context.UpdatedAt.ToShortDateString()</MudTd>
                </RowTemplate>
            </MudTable>
        </MudCardContent>
    </MudCard>

    <DictionaryUpload @ref="uploadDialog" OnUploaded="Reload" />
</div>

@code {
    List<DictionaryDto> items = new();
    DictionaryUpload? uploadDialog;

    protected override async Task OnInitializedAsync()
    {
        await Reload();
    }

    async Task Reload() => items = await ApiClient.GetAllAsync();

    void OpenUpload() => uploadDialog?.Show();
}
