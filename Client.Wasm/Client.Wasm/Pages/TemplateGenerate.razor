@attribute [Authorize]
@using Client.Wasm.DTOs
@inject ITemplateApiClient ApiClient
@inject ISnackbar Snackbar
<RedirectToLogin />

<MudContainer Class="mt-4">
    <MudText Typo="Typo.h5">Генерация документа</MudText>
    @* TODO: заменить на MudBlazor *@
    <div></div>
</MudContainer>

@code {
    // TODO: заменить на MudBlazor
    TemplateModel model = new();
    int templateId;

    public void Show(int id)
    {
        templateId = id;
        model = new TemplateModel { Date = DateTime.Today };
        // TODO: заменить на MudBlazor
        // _ = dlg.ShowAsync();
    }

    async Task Generate()
    {
        try
        {
            var bytes = await ApiClient.GeneratePdfAsync(templateId, model);
            // здесь могла бы быть логика скачивания файла
            Snackbar.Add("Документ создан", Severity.Success);
            // TODO: заменить на MudBlazor
            // _ = dlg.HideAsync();
        }
        catch (Exception ex)
        {
            Snackbar.Add("Ошибка генерации: " + ex.Message, Severity.Error);
        }
    }
}
