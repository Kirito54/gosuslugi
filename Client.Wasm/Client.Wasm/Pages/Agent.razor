@attribute [Authorize]
@page "/agent"
@inject Client.Wasm.Services.IAgentApiClient AgentClient

<MudCard Class="rounded-xl shadow-lg glass-effect p-6">
    <MudCardHeader>
        <MudText Typo="Typo.h6" Class="mb-4">AI Агент</MudText>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@request">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <MudText Color="Color.Error" Class="mb-2">@errorMessage</MudText>
            }
            <MudTextField Lines="6" @bind-Value="request.Text" Placeholder="Введите заявление или вопрос" Class="w-100 mb-4" />
            <MudButton Color="Color.Primary" Variant="Variant.Filled" Type="Button" OnClick="Send">Отправить</MudButton>
        </EditForm>
        @if (response != null)
        {
            <div class="mt-4 p-6 rounded-xl shadow-lg bg-white">
                <pre>@System.Text.Json.JsonSerializer.Serialize(response, new System.Text.Json.JsonSerializerOptions { WriteIndented = true })</pre>
            </div>
        }
    </MudCardContent>
</MudCard>

@code {
    Client.Wasm.DTOs.DocumentClassifyFormDto request = new();
    Client.Wasm.DTOs.DocumentClassificationResultDto? response;
    string? errorMessage;

    private async Task Send()
    {
        errorMessage = null;
        if (!Client.Wasm.Helpers.ManualValidator.TryValidate(request, out var errors))
        {
            errorMessage = string.Join("\n", errors);
            return;
        }
        response = await AgentClient.AnalyzeAsync(request);
    }
}
