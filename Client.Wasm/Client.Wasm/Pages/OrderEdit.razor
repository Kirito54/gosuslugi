@attribute [Authorize]
@using Client.Wasm.DTOs
@inject IJSRuntime Js
@inject NavigationManager NavigationManager

@if (visible)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@hdr</h5>
                    <button type="button" class="btn-close" @onclick="Hide"></button>
                </div>
                <EditForm Model="model" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#main">Основное</a>
                        </li>
                    </ul>
                    <div class="tab-content p-4 border border-top-0 rounded-bottom">
                        <div class="tab-pane fade show active" id="main">
                            <InputText class="form-control mb-3" @bind-Value="model.Number" placeholder="Номер" />
                            <InputDate class="form-control mb-3" @bind-Value="model.Date" />
                            <InputTextArea class="form-control mb-3" @bind-Value="model.Text" placeholder="Текст" rows="3" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary me-2">Сохранить</button>
                        <button type="button" class="btn btn-outline-secondary" @onclick="Hide">Отмена</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    bool visible;
    OrderDto model = new();
    string hdr = string.Empty;

    public void Show(OrderDto dto)
    {
        model = new OrderDto();
        hdr = "Новый приказ";
        visible = true;
    }

    public void Load(int id)
    {
        hdr = $"Редактировать приказ #{id}";
        visible = true;
    }

    void Hide() => visible = false;

    async Task Save()
    {
        visible = false;
        if (OnSaved.HasDelegate)
        {
            await OnSaved.InvokeAsync();
        }
    }

    [Parameter] public EventCallback OnSaved { get; set; }
}
