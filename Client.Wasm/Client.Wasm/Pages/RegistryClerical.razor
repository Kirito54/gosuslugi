@page "/registry/clerical"
@attribute [Authorize(Roles = "Канцелярия")]

<MudCard Class="glass-effect rounded-xl shadow-lg p-6 mb-4">
    <MudCardHeader>
        <MudText Typo="Typo.h5">Реестр канцелярии</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudButton Color="Color.Primary" Class="mb-4" OnClick="ShowDialog">Зарегистрировать ответ</MudButton>
        <MudTable Items="@answers" Hover="true">
            <HeaderContent>
                <MudTh>ID</MudTh>
                <MudTh>Тема</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="ID">@context.Id</MudTd>
                <MudTd DataLabel="Тема">@context.Subject</MudTd>
            </RowTemplate>
        </MudTable>
        <MudDialog @bind-Visible="dialogVisible" MaxWidth="MaxWidth.Small">
            <DialogContent>
                <MudText Typo="Typo.h6" Class="mb-2">Регистрация ответа</MudText>
                <EditForm Model="newAnswer" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <MudTextField @bind-Value="newAnswer.Subject" Label="Тема" Class="form-field" />
                    <InputFile OnChange="OnFileChange" class="form-field" />
                    <!-- TODO: заменить на MudBlazor загрузчик с прогрессом -->
                    <div class="text-right">
                        <MudButton Type="Submit" Color="Color.Primary" Class="me-2">Сохранить</MudButton>
                        <MudButton Variant="Variant.Text" OnClick="HideDialog">Отмена</MudButton>
                    </div>
                </EditForm>
            </DialogContent>
        </MudDialog>
    </MudCardContent>
</MudCard>

@code {
    List<AnswerRow> answers = new();
    bool dialogVisible;
    AnswerRow newAnswer = new();
    IBrowserFile? uploadedFile;

    protected override void OnInitialized()
    {
        answers = new() { new AnswerRow { Id = 1, Subject = "Получен ответ" } };
    }

    void ShowDialog() => dialogVisible = true;
    void HideDialog() => dialogVisible = false;

    void OnFileChange(InputFileChangeEventArgs e) => uploadedFile = e.File;

    Task Save()
    {
        dialogVisible = false;
        answers.Add(new AnswerRow { Id = answers.Count + 1, Subject = newAnswer.Subject });
        newAnswer = new();
        return Task.CompletedTask;
    }

    class AnswerRow
    {
        public int Id { get; set; }
        [Required]
        public string Subject { get; set; } = string.Empty;
    }
}
