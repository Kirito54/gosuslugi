@inherits LayoutComponentBase
@inject IAuthService AuthService
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    @if (!Nav.Uri.Contains("/login"))
    {
        <SfToolbar CssClass="e-bootstrap5 top-toolbar">
            <ToolbarItems>
                <ToolbarItem PrefixIcon="e-menu" TooltipText="Меню" OnClick="ToggleSidebar" />
                <ToolbarItem PrefixIcon="" Text="">
                    <Template>
                        <a class="navbar-brand" href="/">
                            <img src="images/logo.png" alt="Logo" style="height:40px" class="me-2" />
                        </a>
                    </Template>
                </ToolbarItem>
                <ToolbarItem Align="ItemAlign.Right">
                    <Template>
                        @if (authState?.User?.Identity?.IsAuthenticated == true)
                        {
                            <SfButton CssClass="e-danger" OnClick="Logout">Выйти</SfButton>
                        }
                        else
                        {
                            <SfButton CssClass="e-primary" OnClick="@(() => Nav.NavigateTo("/login"))">Войти</SfButton>
                        }
                    </Template>
                </ToolbarItem>
            </ToolbarItems>
        </SfToolbar>
    }
</CascadingAuthenticationState>

<SfSidebar @ref="sidebar" Type="SidebarType.Push" Width="250px" CssClass="sidebar" MediaQuery="(min-width:768px)">
    <Sidebar Groups="MenuGroups" />
</SfSidebar>

<div class="content @(Nav.Uri.Contains("/login") ? "login-content" : "p-4")">
    <RedirectToLogin />
    @Body
</div>

@if (!Nav.Uri.Contains("/login"))
{
    <footer class="bg-light text-center py-3">
        &copy; 2025 Госуслуги
    </footer>
}

@code {
    private AuthenticationState? authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
    SfSidebar sidebar;

    List<Sidebar.MenuGroup> MenuGroups = new()
    {
        new Sidebar.MenuGroup
        {
            Title = "Заявления",
            Items = new()
            {
                new Sidebar.MenuItem { Title = "Все", Url = "/applications" },
                new Sidebar.MenuItem { Title = "Реестр заявлений", Url = "/registry/applications" },
                new Sidebar.MenuItem { Title = "Распоряжения РДЗ", Url = "/registry/rdz-orders" },
                new Sidebar.MenuItem { Title = "Распоряжения РДИ", Url = "/registry/rdi-orders" }
            }
        },
        new Sidebar.MenuGroup
        {
            Title = "Документы",
            Items = new()
            {
                new Sidebar.MenuItem { Title = "Все документы", Url = "/documents/0" },
                new Sidebar.MenuItem { Title = "Договоры", Url = "/registry/contracts" },
                new Sidebar.MenuItem { Title = "Акты", Url = "/registry/acts" },
                new Sidebar.MenuItem { Title = "Соглашения", Url = "/registry/agreements" },
                new Sidebar.MenuItem { Title = "Ответы", Url = "/registry/answers" },
                new Sidebar.MenuItem { Title = "Канцелярия", Url = "/registry/clerical" }
            }
        },
        new Sidebar.MenuGroup
        {
            Title = "Администрирование",
            Items = new()
            {
                new Sidebar.MenuItem { Title = "Сервисы", Url = "/services" },
                new Sidebar.MenuItem { Title = "Шаблоны услуг", Url = "/service-templates" },
                new Sidebar.MenuItem { Title = "Рабочие процессы", Url = "/workflows" },
                new Sidebar.MenuItem { Title = "Шаблоны документов", Url = "/document-templates" },
                new Sidebar.MenuItem { Title = "Пользователи", Url = "/users" },
                new Sidebar.MenuItem { Title = "Группы прав", Url = "/permission-groups" },
                new Sidebar.MenuItem { Title = "Шаблоны номеров", Url = "/number-templates" },
                new Sidebar.MenuItem { Title = "Справочники", Url = "/dictionaries" }
            }
        },
        new Sidebar.MenuGroup
        {
            Title = "Отчеты",
            Items = new()
            {
                new Sidebar.MenuItem { Title = "Дашборд", Url = "/dashboard" }
            }
        },
        new Sidebar.MenuGroup
        {
            Title = "Настройки",
            Items = new()
            {
                new Sidebar.MenuItem { Title = "Профиль", Url = "/profile" },
                new Sidebar.MenuItem { Title = "Пароль", Url = "/profile/change-password" }
            }
        },
        new Sidebar.MenuGroup
        {
            Title = "AI",
            Items = new()
            {
                new Sidebar.MenuItem { Title = "AI Agent", Url = "/agent" }
            }
        }
    };

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
    }

    private void ToggleSidebar()
    {
        if (sidebar != null)
        {
            sidebar.IsOpen = !sidebar.IsOpen;
        }
    }
}
