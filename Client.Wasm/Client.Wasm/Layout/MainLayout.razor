@using Client.Wasm.Services
@inherits LayoutComponentBase
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthProvider
@inject IAuthService AuthService

<CascadingAuthenticationState>
    <MudThemeProvider />
    <MudDialogProvider />
    <MudPopoverProvider />
    <MudSnackbarProvider />

    <header class="gos-header">
        <div class="gos-logo">Госуслуги</div>
        @if (_authState?.User.Identity?.IsAuthenticated == true)
        {
            <nav class="gos-menu">
                <MudLink Href="documents">Документы</MudLink>
                <MudLink Href="users">Пользователи</MudLink>
                <MudLink Href="reports">Отчёты</MudLink>
            </nav>
            <div class="gos-login">
                <MudButton Class="gos-button" OnClick="Logout">Выйти</MudButton>
            </div>
        }
        else
        {
            <div class="gos-login">
                <MudButton Class="gos-button" OnClick="GoToLogin">Войти</MudButton>
            </div>
        }
    </header>

    <MudMainContent>
        <MudContainer Class="mt-4 px-4">
            @Body
        </MudContainer>
    </MudMainContent>

    <MudFooter Class="mt-4 px-4 text-center">
        © 2025 Госуслуги
    </MudFooter>
</CascadingAuthenticationState>

@code {
    private AuthenticationState? _authState;

    protected override async Task OnInitializedAsync()
    {
        _authState = await AuthProvider.GetAuthenticationStateAsync();
    }

    private void GoToLogin() => Nav.NavigateTo("/login", true);

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Nav.NavigateTo("/login", true);
    }
}

